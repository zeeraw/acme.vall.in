[general]
# DNS interface. Note that systemd-resolved may reserve port 53 on 127.0.0.53
# In this case acme-dns will error out and you will need to define the listening interface

# for example: listen = "127.0.0.1:53"
listen = ":53"

# protocol, "both", "both4", "both6", "udp", "udp4", "udp6" or "tcp", "tcp4", "tcp6"
protocol = "both"

# domain name to serve the requests off of
domain = "acme.vall.in"

# zone name server
nsname = "acme.vall.in"

# admin email address, where @ is substituted with .
nsadmin = "admin@vall.in"

# predefined records served in addition to the TXT
records = [
    "acme.vall.in. A 188.166.127.128",
    "ns1.acme.vall.in. A 188.166.127.128",
    "*.acme.vall.in. A 188.166.127.128",
    "acme.vall.in. NS ns1.acme.vall.in.",
    "acme-v02.api.letsencrypt.org. CNAME api.letsencrypt.org-ng.edgekey.net.",
    "acme-v02.api.letsencrypt.org. A 104.123.110.172",
    "acme-staging-v02.api.letsencrypt.org. CNAME api.letsencrypt.org-ng.edgekey.net.",
    "acme-staging-v02.api.letsencrypt.org. A 104.123.110.172",
]

# debug messages from CORS etc
debug = true

[database]
# Database engine to use, sqlite3 or postgres
engine = "sqlite3"

# Connection string, filename for sqlite3 and postgres://$username:$password@$host/$db_name for postgres
connection = "/var/lib/acme-dns/acme-dns.db"

# connection = "postgres://user:password@localhost/acmedns_db"

[api]
# domain name to listen requests for, mandatory if using tls = "letsencrypt"
api_domain = "acme.vall.in"

# disable registration endpoint
disable_registration = false

# autocert HTTP port, eg. 80 for answering Let's Encrypt HTTP-01 challenges. Mandatory if using tls = "letsencrypt".
autocert_port = "80"

# listen ip, default "" listens on all interfaces/addresses
ip = "0.0.0.0"

# listen port, eg. 443 for default HTTPS
port = "443"

# possible values: "letsencrypt", "cert", "none"
tls = "letsencrypt"

# only used if tls = "letsencrypt"
acme_cache_dir = "/var/certs"

# CORS AllowOrigins, wildcards can be used
corsorigins = [
    "*"
]

# use HTTP header to get the client ip
use_header = false

# header name to pull the ip address / list of ip addresses from
header_name = "X-Forwarded-For"

[logconfig]
# logging level: "error", "warning", "info" or "debug"
loglevel = "debug"

# possible values: stdout, TODO file & integrations
logtype = "stdout"

# file path for logfile TODO
# logfile = "./acme-dns.log"
# format, either "json" or "text"
logformat = "text"

